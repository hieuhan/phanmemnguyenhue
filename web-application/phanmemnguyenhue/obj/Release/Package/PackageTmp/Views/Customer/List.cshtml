@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model CustomerVM
@using phanmemnguyenhue.library
@using System.Collections.Specialized
<div class="page-body">
    <div class="container-xl">
        <div class="row g-2 align-items-center">
            <div class="col-md-12 ms-auto">
                <form action="@Url.Action("index" , "customer")" class="form-group row" method="get">
                    <div class="col-md-2 mb-3">
                        @Html.DropDownListFor(m => m.SiteId, new SelectList(Model.SitesList, "SiteId", "Name", Model.SiteId), new { @class = "form-select select2" })
                    </div>
                    <div class="col-md-2 mb-3">
                        @Html.TextBoxFor(x => x.Keywords, new { @class = "form-control", placeholder = "Tìm theo Họ tên, email, số điện thoại" })
                    </div>
                    <div class="col-md-2 mb-3">
                        <select name="CategoryId" class="form-select select22">
                            <option value="0">-- Chọn danh mục --</option>
                            @if (Model.CategoriesList.IsAny())
                            {
                                string[] actionLevelsList = new string[] { };

                                foreach (var item in Model.CategoriesList)
                                {
                                    if (!string.IsNullOrWhiteSpace(item.TreeOrder))
                                    {
                                        actionLevelsList = item.TreeOrder.Split(new char[] { '/' }, StringSplitOptions.RemoveEmptyEntries);
                                    }
                                    <option value="@item.CategoryId" @(item.ParentId > 0 ? "data-p=" + item.ParentId : "") @(item.CategoryId == Model.CategoryId ? "selected" : "")>@string.Join("", Enumerable.Repeat("-", actionLevelsList.Length > 0 ? actionLevelsList.Length - 1 : 0).ToArray()) @item.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-2 mb-3">
                        @Html.DropDownListFor(m => m.ProvinceId, new SelectList(Model.ProvincesList, "ProvinceId", "Name", Model.ProvinceId).AddDefaultOption("-- Chọn Tỉnh / Thành --", "0"), new { @class = "form-select load-districts select2 push" })
                    </div>
                    <div class="col-md-2 mb-3">
                        @Html.DropDownListFor(m => m.DistrictId, new SelectList(Model.DistrictsList, "DistrictId", "Name", Model.DistrictId).AddDefaultOption("-- Chọn Quận / Huyện --", "0"), new { @class = "form-select select2 push" })
                    </div>
                    @*<div class="col-md-2 mb-3">
                            @Html.DropDownListFor(m => m.WardId, new SelectList(Model.WardsList, "WardId", "Name", Model.WardId).AddDefaultOption("-- Chọn Phường / Xã --", "0"), new { @class = "form-select load-streets select2 push" })
                        </div>
                        <div class="col-md-2 mb-3">
                            @Html.DropDownListFor(m => m.StreetId, new SelectList(Model.StreetsList, "StreetId", "Name", Model.StreetId).AddDefaultOption("-- Chọn Đường / Phố --", "0"), new { @class = "form-select select2 push" })
                        </div>*@
                    <div class="col-md-2 mb-3">
                        <select name="DataDisplayId" class="form-select select2">
                            <option value="0" @(Model.DataDisplayId <= 0 ? "selected" : "")>-- Chọn Dữ liệu hiển thị --</option>
                            <option value="1" @(Model.DataDisplayId == 1 ? "selected" : "")>Hiển thị số điện thoại</option>
                            <option value="2" @(Model.DataDisplayId == 2 ? "selected" : "")>Hiển thị Email</option>
                        </select>
                    </div>
                    <div class="col-md-2 mb-3">
                        <select name="SortedBy" class="form-select select2">
                            <option value="0" @(Model.SortedBy <= 0 ? "selected" : "")>Sắp xếp theo bài đăng giảm dần</option>
                            <option value="1" @(Model.SortedBy == 1 ? "selected" : "")>Sắp xếp theo bài đăng tăng dần</option>
                            <option value="2" @(Model.SortedBy == 2 ? "selected" : "")>Sắp xếp theo tên</option>
                        </select>
                    </div>
                    <div class="col-md-2 mb-3">
                        <input type="hidden" name="Page" value="@Model.Pagination.PageIndex" />
                        <div class="btn-list flex-nowrap">
                            <button type="submit" class="btn btn-primary btn-search">
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-search" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                    <circle cx="10" cy="10" r="7"></circle>
                                    <line x1="21" y1="21" x2="15" y2="15"></line>
                                </svg>
                                Tìm kiếm
                            </button>
                            <button type="submit" class="btn btn-teal btn-export-excel">
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-file-arrow-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                    <path d="M14 3v4a1 1 0 0 0 1 1h4"></path>
                                    <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"></path>
                                    <path d="M9 15h6"></path>
                                    <path d="M12.5 17.5l2.5 -2.5l-2.5 -2.5"></path>
                                </svg>
                                Xuất file Excel
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="container-xl d-flex flex-column justify-content-center">
        <div class="row row-cards">
            <div id="table-result" class="col-12">
                <div class="col">
                    <div class="page-pretitle">
                        Danh sách Khách hàng
                        @if (Model.Pagination.RowCount > 0)
                        {
                            <span class="text-muted mt-1">(@Model.Pagination.RowCount.ToString("#,###"))</span>
                        }
                    </div>
                </div>
                <div class="card">
                    @if (Model.CustomersList.IsAny())
                    {
                        int number = 0;
                        <div class="table-responsive">
                            <table class="table table-vcenter card-table">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>Họ và tên</th>
                                        @if (Model.DataDisplayId == 1)
                                        {
                                            <th>Số điện thoại</th>
                                        }
                                        else if (Model.DataDisplayId == 2)
                                        {
                                            <th>Email</th>
                                        }
                                        else
                                        {
                                            <th>Số điện thoại</th>
                                            <th>Email</th>
                                        }
                                        <th>Bài đăng</th>
                                        <th>Thời gian quét gần nhất</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int index = 0; index < Model.CustomersList.Count; index++)
                                    {
                                        number = index + (Model.Pagination.PageIndex > 0 ? Model.Pagination.PageIndex - 1 : Model.Pagination.PageIndex) * Model.Pagination.PageSize + 1;
                                        <tr>
                                            <td class="text-muted">@number.ToString("#,###")</td>
                                            <td>
                                                <div class="row d-flex py-1 align-items-center" style="flex-wrap: unset;">
                                                    @if (!string.IsNullOrWhiteSpace(Model.CustomersList[index].Avatar))
                                                    {
                                                        <div class="col-auto">
                                                            <span class="avatar" style="background-image: url(@Model.CustomersList[index].Avatar)"></span>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="col-auto">
                                                            <span class="avatar">@Model.CustomersList[index].FullName.Substring(0, 1).ToUpper()</span>
                                                        </div>
                                                    }
                                                    <div class="flex-fill">
                                                        <div class="font-weight-medium"><a href="@Url.Action("index" , "product", new { SiteId = Model.CustomersList[index].SiteId, CustomerId = Model.CustomersList[index].CustomerId } ).BuildQueryStringUrl(new NameValueCollection { { "CategoryId", Model.CategoryId > 0 ? Model.CategoryId.ToString() : "" }, { "ProvinceId", Model.ProvinceId > 0 ? Model.ProvinceId.ToString() : "" } })" title="Xem bài đăng" target="_blank">@Model.CustomersList[index].FullName.DefaultIfEmpty()</a></div>
                                                    </div>
                                                </div>
                                            </td>
                                            @if (Model.DataDisplayId == 1)
                                            {
                                                <td><a href="tel:@Model.CustomersList[index].PhoneNumber" title="@Model.CustomersList[index].PhoneNumber">@Model.CustomersList[index].PhoneNumber</a></td>
                                            }
                                            else if (Model.DataDisplayId == 2)
                                            {
                                                <td><a href="mailto:@Model.CustomersList[index].Email" target="_blank" title="@Model.CustomersList[index].Email">@Model.CustomersList[index].Email</a></td>
                                            }
                                            else
                                            {
                                                <td><a href="tel:@Model.CustomersList[index].PhoneNumber" title="@Model.CustomersList[index].PhoneNumber">@Model.CustomersList[index].PhoneNumber</a></td>
                                                <td><a href="mailto:@Model.CustomersList[index].Email" target="_blank" title="@Model.CustomersList[index].Email">@Model.CustomersList[index].Email</a></td>
                                            }
                                            <td><b>@Model.CustomersList[index].TotalProducts.ToString("#,###")</b></td>
                                            <td>@Model.CustomersList[index].LastCrawledAt.DateTimeToString("", "dd/MM/yyyy HH:mm:ss")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            @Html.Partial("PartialPagination", Model.Pagination)
                        </div>
                    }
                    else
                    {
                        <div class="col-12">
                            <div class="card card-md">
                                <div class="card-body">
                                    <div class="row align-items-center">
                                        <div class="col-10">
                                            <div class="text-muted">
                                                Không tìm thấy Khách hàng phù hợp.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

